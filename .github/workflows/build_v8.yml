name: build v8

on: 
  workflow_dispatch:
    inputs:
      tag_date:
        description: 'tag date'     
        required: true

#https://docs.google.com/document/d/1oFPHyNb_eXg6NzrE6xJDNPdJrHMZvx0LqsD6wpbd9vY/edit#heading=h.4tfb7x3beh2l
#libwee8按设计只支持wasm，不支持js，但8.4.371.19版本尚未移除js功能，还能用，如果升级v8版本要注意
#libmonolith会稳妥一些，但静态库大小会大些
env:
  VERSION: 8.4.371.19

jobs:
  build_android_arm_v8:
    name: Android (arm64-v8a)
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Run build script
      run: |
        cd $GITHUB_WORKSPACE
        sh ./v8-build/android_armv8.sh ${{env.VERSION}}
    - uses: actions/upload-artifact@v2
      with:
        name: v8_bin
        path: ~/v8/v8/output/**/*

  build_android_arm_v7:
    name: Android (armeabi-v7a)
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Run build script
      run: |
        cd $GITHUB_WORKSPACE
        sh ./v8-build/android_armv7.sh ${{env.VERSION}}
    - uses: actions/upload-artifact@v2
      with:
        name: v8_bin
        path: ~/v8/v8/output/**/*
        
  build_android_x86_64:
    name: Android (x86_64)
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Run build script
      run: |
        cd $GITHUB_WORKSPACE
        sh ./v8-build/android_x64.sh ${{env.VERSION}}
    - uses: actions/upload-artifact@v2
      with:
        name: v8_bin
        path: ~/v8/v8/output/**/*
        
  build_linux:
    name: Linux
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Run build script
      run: |
        cd $GITHUB_WORKSPACE
        sh ./v8-build/linux.sh ${{env.VERSION}}
    - uses: actions/upload-artifact@v2
      with:
        name: v8_bin
        path: ~/v8/v8/output/**/*

  build_windows:
    name: Windows
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - name: Run build script
      shell: cmd
      run: |
        cd %GITHUB_WORKSPACE%
        call .\v8-build\windows_64.cmd ${{env.VERSION}}
    - uses: actions/upload-artifact@v2
      with:
        name: v8_bin
        path: v8/v8/output/**/*
        
    - uses: actions/upload-artifact@v2
      with:
        name: v8_bin_win64
        path: v8/v8/output/**/*
        
  build_windows_md:
    name: Windows-MD
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - name: Run build script
      shell: cmd
      run: |
        cd %GITHUB_WORKSPACE%
        call .\v8-build\windows_64MD.cmd ${{env.VERSION}}
    - uses: actions/upload-artifact@v2
      with:
        name: v8_bin
        path: v8/v8/output/**/*
        
  build_windows_md_dll:
    name: Windows-MD-DLL
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - name: Run build script
      shell: cmd
      run: |
        cd %GITHUB_WORKSPACE%
        call .\v8-build\windows_64MD_DLL.cmd ${{env.VERSION}}
    - uses: actions/upload-artifact@v2
      with:
        name: v8_bin
        path: v8/v8/output/**/*
        
  build_windows_32:
    name: Windows-32
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - name: Run build script
      shell: cmd
      run: |
        cd %GITHUB_WORKSPACE%
        call .\v8-build\windows_32.cmd ${{env.VERSION}}
    - uses: actions/upload-artifact@v2
      with:
        name: v8_bin
        path: v8/v8/output/**/*
          
  build_macos:
    name: macOS
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v2
    - name: Use Xcode 12.0 to use SDK 10.15
      run: sudo xcode-select -switch "/Applications/Xcode_12.app"
    - name: Run build script
      run: |
        cd $GITHUB_WORKSPACE
        sh ./v8-build/macos.sh ${{env.VERSION}}
    - uses: actions/upload-artifact@v2
      with:
        name: v8_bin
        path: ~/v8/v8/output/**/*
        
  build_macos_dll:
    name: macOS-DLL
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v2
    - name: Use Xcode 12.0 to use SDK 10.15
      run: sudo xcode-select -switch "/Applications/Xcode_12.app"
    - name: Run build script
      run: |
        cd $GITHUB_WORKSPACE
        sh ./v8-build/macos_DLL.sh ${{env.VERSION}}
    - uses: actions/upload-artifact@v2
      with:
        name: v8_bin
        path: ~/v8/v8/output/**/*

  build_ios:
    name: iOS
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v2
    - name: Use Xcode 12.0 to use SDK 10.15
      run: sudo xcode-select -switch "/Applications/Xcode_12.app"
    - name: Run build script
      run: |
        cd $GITHUB_WORKSPACE
        sh ./v8-build/ios.sh ${{env.VERSION}}
    - uses: actions/upload-artifact@v2
      with:
        name: v8_bin
        path: ~/v8/v8/output/**/*
  
  #build_ios_simulator:
  #  name: iOS simulator
  #  runs-on: macos-10.15
  #  steps:
  #  - uses: actions/checkout@v2
  #  - name: Use Xcode 12.0 to use SDK 10.15
  #    run: sudo xcode-select -switch "/Applications/Xcode_12.app"
  #  - name: Run build script
  #    run: |
  #      cd $GITHUB_WORKSPACE
  #      sh ./v8-build/ios_simulator.sh ${{env.VERSION}}
  #  - uses: actions/upload-artifact@v2
  #    with:
  #      name: v8_bin
  #      path: ~/v8/v8/output/**/*
        
  publish:
    runs-on: ubuntu-latest
    needs: [build_android_arm_v8,build_android_arm_v7,build_android_x86_64,build_linux,build_windows,build_windows_md,build_windows_32,build_macos,build_ios,build_windows_md_dll,build_macos_dll]
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: v8_bin
          path: v8_bin/
          
      - name: Create Release Asset
        run: |
          cd v8_bin/ && tar cvfz ../v8_bin_${{env.VERSION}}.tgz v8 && cd -
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: V8_${{env.VERSION}}_${{ github.event.inputs.tag_date }}
          release_name: V8_${{env.VERSION}}_${{ github.event.inputs.tag_date }}
          draft: false
          prerelease: false
          
      - name: Upload V8
        #id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./v8_bin_${{env.VERSION}}.tgz
          asset_name: v8_bin_${{env.VERSION}}.tgz
          asset_content_type: application/tgz
          

