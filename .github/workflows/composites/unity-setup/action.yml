name: unity setup

inputs:
  os:
    required:
  version:
    required:
  cachekey:
    required:
  install_path:
    required:
  unity_modules:
    required:
  architecture:
    required: false
  UNITY_USERNAME:
    required:
  UNITY_PASSWORD:
    required:
  UNITY_SERIAL:
    required:

runs:
  using: "composite"
  steps:
    - uses: actions/cache/restore@v3
      id: cache-unity
      with:
        path: ${{ inputs.install_path }}
        key: ${{ inputs.os }}-${{ inputs.cachekey }}-unity 
    - name: MKDIR
      if: steps.cache-unity.outputs.cache-hit != 'true'
      shell: bash
      run: mkdir ${{ inputs.install_path }}
    - name: Setup Unity
      if: steps.cache-unity.outputs.cache-hit != 'true'
      uses: chexiongsheng/setup-unity@master
      with:
        unity-modules: ${{ inputs.unity_modules }}
        unity-version: ${{ inputs.version }}
        install-path: ${{ inputs.install_path }}
        architecture: ${{ inputs.architecture }}
    - uses: actions/cache/save@v3
      if: steps.cache-unity.outputs.cache-hit != 'true'
      with:
        path: ${{ inputs.install_path }}
        key: ${{ inputs.os }}-${{ inputs.cachekey }}-unity 
    - name: Get Unity Path if cache-hit
      if: steps.cache-unity.outputs.cache-hit == 'true'
      uses: chexiongsheng/setup-unity@master
      with:
        unity-version: ${{ inputs.version }}
        install-path: ${{ inputs.install_path }}
        architecture: ${{ inputs.architecture }}
    - name: Activate Unity
      uses: chexiongsheng/activate-unity@master
      with:
        unity-username: ${{ inputs.UNITY_USERNAME }}
        unity-password: ${{ inputs.UNITY_PASSWORD }}
        unity-serial: ${{ inputs.UNITY_SERIAL }}
        project-path: ${{ github.workspace }}/unity/test/unity