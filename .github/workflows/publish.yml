name: publish

on: 
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'tag name'     
        required: true

env:
  RUNID: 613573412

jobs:
  android:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build_v8.yml
          name: v8_bin
          path: unity/native_src/
      - name: Install NDK
        run: |
          cd ~
          wget -O NDK -q https://dl.google.com/android/repository/android-ndk-r21b-linux-x86_64.zip
          sudo apt install unzip -y
          unzip -q NDK
          export ANDROID_NDK=~/android-ndk-r21b
      - name: Build
        run: |
          ls ~/android-ndk-r21b
          cd unity/native_src
          chmod 777 make_android.sh
          ./make_android.sh
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: ./unity/Assets/Plugins/**/*
          name: Unity_Plugins_V8
  android_qjs:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build_quickjs.yml
          #run_id: ${{env.RUNID}}
          name: qjs_v8_bin
          path: unity/native_src/
      - name: Install NDK
        run: |
          cd ~
          wget -O NDK -q https://dl.google.com/android/repository/android-ndk-r21b-linux-x86_64.zip
          sudo apt install unzip -y
          unzip -q NDK
          export ANDROID_NDK=~/android-ndk-r21b
      - name: Build
        run: |
          ls ~/android-ndk-r21b
          cd unity/native_src
          chmod 777 make_android.sh
          ./make_android.sh quickjs
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: ./unity/Assets/Plugins/**/*
          name: Unity_Plugins_Quickjs
  ios:
    runs-on: macos-10.15

    steps:
      - uses: actions/checkout@v2
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build_v8.yml
          name: v8_bin
          path: unity/native_src/
      - name: Use Xcode 12.0 for x86
        run: sudo xcode-select -switch "/Applications/Xcode_12.app"
      - name: Build
        run: |
          cd unity/native_src
          sh ./make_ios.sh
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: ./unity/Assets/Plugins/**/*
          name: Unity_Plugins_V8
  ios_qjs:
    runs-on: macos-10.15

    steps:
      - uses: actions/checkout@v2
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build_quickjs.yml
          #run_id: ${{env.RUNID}}
          name: qjs_v8_bin
          path: unity/native_src/
      - name: Use Xcode 12.0 for x86
        run: sudo xcode-select -switch "/Applications/Xcode_12.app"
      - name: Build
        run: |
          cd unity/native_src
          sh ./make_ios.sh quickjs
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: ./unity/Assets/Plugins/**/*
          name: Unity_Plugins_Quickjs
  osx:
    runs-on: macos-10.15

    steps:
      - uses: actions/checkout@v2
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build_v8.yml
          name: v8_bin
          path: unity/native_src/
      - name: Use Xcode 12.0 for x86
        run: sudo xcode-select -switch "/Applications/Xcode_12.app"
      - name: Build
        run: |
          cd unity/native_src
          sh ./make_osx.sh
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: ./unity/Assets/Plugins/**/*
          name: Unity_Plugins_V8
  osx_node:
    runs-on: macos-10.15

    steps:
      - uses: actions/checkout@v2
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build_nodejs.yml
          name: nodejs_bin
          path: unity/native_src/
      - name: Use Xcode 12.0 for x86
        run: sudo xcode-select -switch "/Applications/Xcode_12.app"
      - name: Build
        run: |
          cd unity/native_src
          sh ./make_osx.sh nodejs
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: ./unity/Assets/Plugins/**/*
          name: Unity_Plugins_Nodejs
  osx_qjs:
    runs-on: macos-10.15

    steps:
      - uses: actions/checkout@v2
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build_quickjs.yml
          #run_id: ${{env.RUNID}}
          name: qjs_v8_bin
          path: unity/native_src/
      - name: Use Xcode 12.0 for x86
        run: sudo xcode-select -switch "/Applications/Xcode_12.app"
      - name: Build
        run: |
          cd unity/native_src
          sh ./make_osx.sh quickjs
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: ./unity/Assets/Plugins/**/*
          name: Unity_Plugins_Quickjs
  windows:
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build_v8.yml
          name: v8_bin
          path: unity/native_src/
      - name: Build
        run: |
          cd unity\native_src
          .\make_win64.bat
          .\make_win32.bat
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: ./unity/Assets/Plugins/**/*
          name: Unity_Plugins_V8
  windows_node:
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build_nodejs.yml
          name: nodejs_bin
          path: unity/native_src/
      - name: Build
        run: |
          cd unity\native_src
          .\make_win64.bat nodejs
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: ./unity/Assets/Plugins/**/*
          name: Unity_Plugins_Nodejs
          
  windows_qjs:
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build_quickjs.yml
          #run_id: ${{env.RUNID}}
          name: qjs_v8_bin
          path: unity/native_src/
      - name: Build
        run: |
          cd unity\native_src
          .\make_win64.bat quickjs
          .\make_win32.bat quickjs
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: ./unity/Assets/Plugins/**/*
          name: Unity_Plugins_Quickjs
  linux64:
    runs-on: ubuntu-latest
    
    steps:
      - name: Install libc++-dev
        run: |
          sudo apt-get install clang
          sudo apt-get install libc++-dev
          sudo apt-get install libc++abi-dev
      - uses: actions/checkout@v2
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build_v8.yml
          name: v8_bin
          path: unity/native_src/
      - name: Build
        run: |
          cd unity/native_src
          chmod 777 make_linux64.sh
          ./make_linux64.sh
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: ./unity/Assets/Plugins/**/*
          name: Unity_Plugins_V8
  publish:
    runs-on: ubuntu-latest
    needs: [windows,osx,ios,android,windows_qjs,osx_qjs,ios_qjs,android_qjs,linux64]
    steps:
      - uses: actions/checkout@v2
      
      - name: Retrieve version
        run: |
          echo "PLUGIN_VERSION=$(cat unity/native_src/Src/Puerts.cpp | grep -Po '(?<=LIB_VERSION\s)(\d+)')" >> $GITHUB_ENV
            
      - uses: actions/download-artifact@v1
        with:
          name: Unity_Plugins_V8
          path: V8/Plugins/
          
      - uses: actions/download-artifact@v1
        with:
          name: Unity_Plugins_Quickjs
          path: Quickjs/Plugins/

      - uses: actions/download-artifact@v1
        with:
          name: Unity_Plugins_Nodejs
          path: Nodejs/Plugins/
          
      - name: Create Release Asset
        run: |
          cd V8/ && tar cvfz ../Plugins_V8_ver${{ env.PLUGIN_VERSION }}.tgz Plugins && cd -
          cd Quickjs/ && tar cvfz ../Plugins_Quickjs_ver${{ env.PLUGIN_VERSION }}.tgz Plugins && cd -
          cd Nodejs/ && tar cvfz ../Plugins_Nodejs_ver${{ env.PLUGIN_VERSION }}.tgz Plugins && cd -
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: |
            mac下如果遇到移入废纸篓问题，请使用
            sudo xattr -r -d com.apple.quarantine puerts.bundle
          tag_name: Unity_Plugin_${{ github.event.inputs.tag_name }}
          release_name: Unity_Plugin_${{ github.event.inputs.tag_name }},Version:${{ env.PLUGIN_VERSION }}
          draft: false
          prerelease: false
          
      - name: Upload V8 Plugins
        #id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Plugins_V8_ver${{ env.PLUGIN_VERSION }}.tgz
          asset_name: Plugins_V8_ver${{ env.PLUGIN_VERSION }}.tgz
          asset_content_type: application/tgz
          
      - name: Upload Quickjs Plugins
        #id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Plugins_Quickjs_ver${{ env.PLUGIN_VERSION }}.tgz
          asset_name: Plugins_Quickjs_ver${{ env.PLUGIN_VERSION }}.tgz
          asset_content_type: application/tgz
          
      - name: Upload Nodejs Plugins
        #id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Plugins_Nodejs_ver${{ env.PLUGIN_VERSION }}.tgz
          asset_name: Plugins_Nodejs_ver${{ env.PLUGIN_VERSION }}.tgz
          asset_content_type: application/tgz
   
