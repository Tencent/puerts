cmake_minimum_required(VERSION 3.16)
project(papi-python)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

add_definitions(-D_CRT_SECURE_NO_WARNINGS)

# Find Python
set(Python3_FIND_STRATEGY LOCATION)

find_package(Python3 COMPONENTS Development REQUIRED)

# Include directories
include_directories(
    ${CMAKE_CURRENT_SOURCE_DIR}/include
    ${CMAKE_CURRENT_SOURCE_DIR}/../puerts/include
    ${CMAKE_CURRENT_SOURCE_DIR}/../native_src/Inc
)

# Source files
set(SOURCES
    source/PesapiPythonImpl.cpp
    source/CppObjectMapperPython.cpp
    source/PythonEnv.cpp
)

# Create shared library
add_library(papi-python SHARED ${SOURCES})

# Link libraries
target_link_libraries(papi-python
    Python3::Python
)

# Set output directory
set_target_properties(papi-python PROPERTIES
    LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
    RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
)

# Platform specific settings
if(WIN32)
    target_compile_definitions(papi-python PRIVATE
        WIN32_LEAN_AND_MEAN
        _WIN32_WINNT=0x0601
    )
elseif(APPLE)
    target_compile_definitions(papi-python PRIVATE
        _DARWIN_C_SOURCE
    )
endif()

# Compiler specific settings
if(MSVC)
    target_compile_options(papi-python PRIVATE /W4)
else()
    target_compile_options(papi-python PRIVATE -Wall -Wextra)
endif()

message("Found Python version: ${Python3_VERSION}")
message("Python library: ${Python3_LIBRARIES}")