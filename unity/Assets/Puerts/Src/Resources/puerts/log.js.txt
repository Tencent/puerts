/*
 * Tencent is pleased to support the open source community by making Puerts available.
 * Copyright (C) 2020 THL A29 Limited, a Tencent company.  All rights reserved.
 * Puerts is licensed under the BSD 3-Clause License, except for the third-party components listed in the file 'LICENSE' which may be subject to their corresponding license terms. 
 * This file is subject to the terms and conditions defined in file 'LICENSE', which is part of this source code package.
 */

var global = global || (function () { return this; }());
(function (global) {
    "use strict";

    let UnityEngine_Debug = puerts.loadType('UnityEngine.Debug');
    
    if (!UnityEngine_Debug) return;

    const console_org = global.console;
    var console = {}

    function getType(arg){
        let t,
            type = arg => (t = typeof arg) === "object" ? Object.prototype.toString.call(arg).slice(8,-1).toLowerCase() : t,
            name = (arg => (t = type(arg)) === "function" ? arg.name : t === "undefined" ? undefined : arg.constructor.name)(arg);
        return {type:t,name:name};
    }

    function toString(args) {
        return Array.prototype.map.call(args, x => {
            try {
                let xType = getType(x);
                if(xType.name === 'Array' && xType.type === 'array'){
                    return `[${x.toString()}]`;
                };
                if(xType.name === 'Object' && xType.type === 'object'){
                    return JSON.stringify(x);
                };
                return x.toString();
            } catch (error) {
                return error;
            }
        }).join(',');
    }

    console.log = function() {
        if (console_org) console_org.log(...arguments);
        UnityEngine_Debug.Log(toString(arguments));
    }

    console.info = function() {
        if (console_org) console_org.info(...arguments);
        UnityEngine_Debug.Log(toString(arguments));
    }

    console.warn = function() {
        if (console_org) console_org.warn(...arguments);
        UnityEngine_Debug.LogWarning(toString(arguments));
    }

    console.error = function() {
        if (console_org) console_org.error(...arguments);
        UnityEngine_Debug.LogError(toString(arguments));
    }

    global.console = console;
    puerts.console = console;
}(global));
